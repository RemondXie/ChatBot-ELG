{"ast":null,"code":"import React,{useState}from'react';import'./chat.css';// Import styling for chat page\nimport axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chat=()=>{const[messages,setMessages]=useState([{text:\"Welcome! I'm here to assist you with any medical questions you might have. Please provide your name and age. Say GOODBYE if you want to quit.\",sender:\"bot\"}]);const[userInput,setUserInput]=useState(\"\");function formatOverview(obj){const entries=Object.entries(obj);// [[\"Age\", 40], [\"BMI\", 28], ...]\nconst formattedPairs=entries.map(_ref=>{let[key,val]=_ref;return\"\".concat(key,\": \").concat(val);});return formattedPairs.join(\", \");}const handleSendMessage=async()=>{if(userInput.trim()){const newMessages=[...messages,{text:userInput,sender:\"user\"}];setMessages(newMessages);setUserInput(\"\");try{const response=await axios.post(\"http://localhost:4000/chat\",{messages:newMessages});const botResponse=response.data.botResponse;const content=botResponse.content;let parsedJson=null;try{parsedJson=JSON.parse(content);}catch(e){console.error(\"Error parsing GPT JSON:\",e);}if(parsedJson&&parsedJson.patient_overview!==undefined&&parsedJson.diagnosis!==undefined&&parsedJson.advice!==undefined){const patientOverviewObj=parsedJson.patient_overview;const overviewText=formatOverview(patientOverviewObj);const overviewMsg={text:\"Patient Overview: \"+overviewText,sender:\"bot\"};const diagnosisMsg={text:\"Diagnosis: \"+parsedJson.diagnosis,sender:\"bot\"};const adviceMsg={text:\"Advice: \"+parsedJson.advice,sender:\"bot\"};setMessages(prev=>[...prev,overviewMsg,diagnosisMsg,adviceMsg]);}else{setMessages(prev=>[...prev,{text:content,sender:\"bot\"}]);}}catch(error){console.error(\"Error calling backend API:\",error);setMessages(prevMessages=>[...prevMessages,{text:\"Sorry, an error occurred while processing your message.\",sender:\"bot\"}]);}}};// Handle the Enter key press\nconst handleKeyPress=e=>{if(e.key==='Enter'){handleSendMessage();}};// Reset chat\nconst handleResetChat=()=>{setMessages([{text:\"Welcome! I'm here to assist you with any medical questions you might have. Please provide your name and age. Say GOODBYE if you want to quit.\",sender:\"bot\"}]);// Reset to initial state\nsetUserInput(\"\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"welcome-message\",children:\"Welcome! I'm here to assist you with any medical questions you might have.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-box\",children:messages.map((message,index)=>/*#__PURE__*/_jsxs(\"div\",{className:message.sender,children:[/*#__PURE__*/_jsx(\"strong\",{children:message.sender===\"user\"?\"Patient:\":\"Chatbot:\"}),/*#__PURE__*/_jsx(\"p\",{children:message.text})]},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:userInput,onChange:e=>setUserInput(e.target.value),onKeyDown:handleKeyPress// Add the key press event listener\n,placeholder:\"Type your message...\"}),/*#__PURE__*/_jsx(\"button\",{className:\"send-chat-button\",onClick:handleSendMessage,children:\"Send\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"reset-container\",children:/*#__PURE__*/_jsx(\"button\",{className:\"reset-chat-button\",onClick:handleResetChat,children:\"Reset Chat\"})})]});};export default Chat;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","Chat","messages","setMessages","text","sender","userInput","setUserInput","formatOverview","obj","entries","Object","formattedPairs","map","_ref","key","val","concat","join","handleSendMessage","trim","newMessages","response","post","botResponse","data","content","parsedJson","JSON","parse","e","console","error","patient_overview","undefined","diagnosis","advice","patientOverviewObj","overviewText","overviewMsg","diagnosisMsg","adviceMsg","prev","prevMessages","handleKeyPress","handleResetChat","className","children","message","index","type","value","onChange","target","onKeyDown","placeholder","onClick"],"sources":["D:/Medical chatbot/Medico-Assistance-OpenAI-ChatBot-Using-Python-main/textbase/textbase/Chatbot to send/src/chat.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './chat.css';  // Import styling for chat page\r\nimport axios from \"axios\";\r\n\r\nconst Chat = () => {\r\n  const [messages, setMessages] = useState([\r\n    { text: \"Welcome! I'm here to assist you with any medical questions you might have. Please provide your name and age. Say GOODBYE if you want to quit.\", sender: \"bot\" },\r\n  ]);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n\r\nfunction formatOverview(obj) {\r\n  const entries = Object.entries(obj);  // [[\"Age\", 40], [\"BMI\", 28], ...]\r\n  const formattedPairs = entries.map(([key, val]) => `${key}: ${val}`);\r\n  return formattedPairs.join(\", \");\r\n}\r\n\r\nconst handleSendMessage = async () => {\r\n  if (userInput.trim()) {\r\n    const newMessages = [...messages, { text: userInput, sender: \"user\" }];\r\n    setMessages(newMessages);\r\n    setUserInput(\"\");\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:4000/chat\", { messages: newMessages });\r\n      const botResponse = response.data.botResponse;\r\n      const content = botResponse.content;\r\n\r\n      let parsedJson = null;\r\n      try {\r\n\r\n        parsedJson = JSON.parse(content);\r\n      } catch (e) {\r\n\r\n        console.error(\"Error parsing GPT JSON:\", e);\r\n      }\r\n\r\n      if (\r\n        parsedJson &&\r\n        parsedJson.patient_overview !== undefined &&\r\n        parsedJson.diagnosis !== undefined &&\r\n        parsedJson.advice !== undefined\r\n      ) {\r\n\r\n\r\n        const patientOverviewObj = parsedJson.patient_overview;\r\n        const overviewText = formatOverview(patientOverviewObj);\r\n\r\n        const overviewMsg = { text: \"Patient Overview: \" + overviewText, sender: \"bot\" };\r\n        const diagnosisMsg = { text: \"Diagnosis: \" + parsedJson.diagnosis, sender: \"bot\" };\r\n        const adviceMsg = { text: \"Advice: \" + parsedJson.advice, sender: \"bot\" };\r\n\r\n        setMessages((prev) => [...prev, overviewMsg, diagnosisMsg, adviceMsg]);\r\n      } else {\r\n\r\n        setMessages((prev) => [...prev, { text: content, sender: \"bot\" }]);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(\"Error calling backend API:\", error);\r\n      setMessages((prevMessages) => [\r\n        ...prevMessages,\r\n        { text: \"Sorry, an error occurred while processing your message.\", sender: \"bot\" },\r\n      ]);\r\n    }\r\n  }\r\n};\r\n\r\n  // Handle the Enter key press\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  // Reset chat\r\n  const handleResetChat = () => {\r\n    setMessages([{ text: \"Welcome! I'm here to assist you with any medical questions you might have. Please provide your name and age. Say GOODBYE if you want to quit.\", sender: \"bot\" }]); // Reset to initial state\r\n    setUserInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      {/* Displaying the welcome message with a larger font */}\r\n      <div className=\"welcome-message\">\r\n        Welcome! I'm here to assist you with any medical questions you might have.\r\n      </div>\r\n\r\n      <div className=\"chat-box\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className={message.sender}>\r\n            <strong>{message.sender === \"user\" ? \"Patient:\" : \"Chatbot:\"}</strong>\r\n            <p>{message.text}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          value={userInput}\r\n          onChange={(e) => setUserInput(e.target.value)}\r\n          onKeyDown={handleKeyPress}  // Add the key press event listener\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <button className=\"send-chat-button\" onClick={handleSendMessage}>Send</button>\r\n      </div>\r\n\r\n      {/* Reset Button outside the input container */}\r\n      <div className=\"reset-container\">\r\n        <button className=\"reset-chat-button\" onClick={handleResetChat}>Reset Chat</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}